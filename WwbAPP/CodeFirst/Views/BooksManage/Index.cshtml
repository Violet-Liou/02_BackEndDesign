@model IEnumerable<CodeFirst.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@* //4.1.5 修改Index View將不需要的欄位、Create、Edit及Details超鏈結移除 *@
<table class="table">
    <thead>
        <tr>
            <th style="max-width:100px; max-height:50px;" class="d-none d-md-table-cell">
                @Html.DisplayNameFor(model => model.Photo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) 
    {
        //4.3.6 使用Bootstrap的Collapse Component來呈現留言資料
        //4.3.7 將呈現回覆留言的id改為動態產生
        <tr data-bs-toggle="collapse" data-bs-target="#B@(item.BookID)">
                <td style="max-width:100px" class="d-none d-md-table-cell">
                @if (item.Photo != null)
                {
                    <img src="~/BookPhotos/@item.Photo" class="img-fluid" />
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.CreateDate)
            </td>
            <td>
                    @* //4.4.8 將BooksManage/Index View的刪除按鈕改寫成表單傳送 *@
                    <form asp-action="Delete" method="post">
                        <input type="hidden" value="@item.BookID" name="id"/>
                        <input type="submit" value="刪除" class="btn btn-danger" onclick="return confirm('確定要刪除此筆留言嗎?')" />
                    </form>
                    @* <a asp-action="Delete" asp-route-id="@item.BookID" class="btn btn-danger">刪除</a> *@
            </td>
        </tr>
            //4.3.6 使用Bootstrap的Collapse Component來呈現留言資料
            //4.3.7 將呈現回覆留言的id改為動態產生
            <tr>
                <td colspan="5" class="p-0">
                    @*//4.3.1 在Index View中加入呈現回覆留言的ViewComponent *@
                    <div class="collapse" id="B@(item.BookID)">
                        @* //4.3.5 在Index View中呈現回覆留言的ViewComponent增加isDel參數的傳遞 *@
                            @await Component.InvokeAsync("VCReBooks", new { bookID = item.BookID, isDel = true })
                    </div>
                </td>
            </tr>
}
    </tbody>
</table>

@* //4.4.3 在Index View中撰寫Ajax程式以呼叫DeleteReBook Action *@
@section Scripts{
    <script>
		function delReBook(rebookID, bookID) {
			if (confirm("確定要刪除此筆留言嗎?")) {
				$.ajax({
					url: '@Url.Action("DeleteReBook", "BooksManage")',
                    // url:"/BooksManage/DeleteReBook", >>老師的寫法
					type: 'POST',
					data: { id: rebookID },
					success: function (result) {
                        console.log(result);
                        //4.4.5 利用GetRebookByViewComponent Action局部更新畫面以顯示刪除後的回覆留言資料畫面
                        $('#B'+bookID).load("/BooksManage/GetRebookByViewComponent/"+bookID);
					},
					error: function (xhr, status, error) {
						alert("刪除失敗：" + error);
					}
				});
			}
		}
    </script>
}
