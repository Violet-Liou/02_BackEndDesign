@model IEnumerable<MyView.Models.NightMarket>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

@* <p>
    <a href="/Home/Create" class="btn btn-primary">Create New</a>
</p> 
    跟上面那一個<p>標籤是一樣的，但是「asp-action」這個寫法是MVC的寫法，會自動幫你產生出正確的URL，避免路徑寫錯
*@ 
<table class="table table-hover">
    <thead>
        <tr>
            <th>圖片</th>
            <th>
                @Html.DisplayNameFor(model => model.Id)
                @* 編號 *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
                @* 名稱 *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
                @* 地址 *@
            </th>
            <th>看地圖</th>
            <th>資料修改</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <img src="/images/@(item.Id).jpg" width="150"/>
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
            <td>    
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a href="https://www.google.com.tw/maps/search/@(item.Address)" target="_blank" class="btn btn-danger">地圖</a>
            </td>
            <td>
                @Html.ActionLink("編輯", "Edit", new { /* id=item.PrimaryKey */ }, new{ @class = "btn btn-warning"})  @* Helper寫法的超連結 *@
                    <a asp-action="Detail" class="btn btn-info" asp-route-id="@item.Id">詳細資料</a>
                @* @Html.ActionLink("詳細資料", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("刪除", "Delete", new { /* id=item.PrimaryKey */ }) *@
                    <a href="/Home/Delete" class="btn btn-danger">刪除</a>
            </td>
        </tr>
}
    </tbody>
</table>
